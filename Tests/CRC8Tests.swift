//
// CRC8Tests.swift
//
// Copyright Â© 2020 QuickBird Studios. All rights reserved.
//

import Foundation

/// Source: https://crccalc.com
final class CRC8Tests: CRCTestCase<UInt8> {

    func testCalculatorASCII123456789() {
        verifyCalculator(
            for: "123456789".data(using: .ascii)!,
            with: [
                .default,
                .cdma2000,
                .darc,
                .dvbS2,
                .ebu,
                .iCode,
                .itu,
                .maxim,
                .rohc,
                .wcdma,
            ]
        )
    }

    func testASCII123456789() {
        verify(for: "123456789".data(using: .ascii)!, expected: [
            (0xF4, .default),
            (0xDA, .cdma2000),
            (0x15, .darc),
            (0xBC, .dvbS2),
            (0x97, .ebu),
            (0x7E, .iCode),
            (0xA1, .itu),
            (0xA1, .maxim),
            (0xD0, .rohc),
            (0x25, .wcdma),
        ])
    }

    func test0x0204() {
        verify(for: Data([0x02, 0x04]), expected: [
            (0x36, .default),
            (0x5C, .cdma2000),
            (0xF5, .darc),
            (0xE8, .dvbS2),
            (0x34, .ebu),
            (0x35, .iCode),
            (0x63, .itu),
            (0xF0, .maxim),
            (0x36, .rohc),
            (0x7D, .wcdma),
        ])
    }

    func testLookupTableCDMA2000() throws {
        verifyLookupTable(for: .cdma2000, equalsTo: [
            0x00, 0x9b, 0xad, 0x36, 0xc1, 0x5a, 0x6c, 0xf7,
            0x19, 0x82, 0xb4, 0x2f, 0xd8, 0x43, 0x75, 0xee,
            0x32, 0xa9, 0x9f, 0x04, 0xf3, 0x68, 0x5e, 0xc5,
            0x2b, 0xb0, 0x86, 0x1d, 0xea, 0x71, 0x47, 0xdc,
            0x64, 0xff, 0xc9, 0x52, 0xa5, 0x3e, 0x08, 0x93,
            0x7d, 0xe6, 0xd0, 0x4b, 0xbc, 0x27, 0x11, 0x8a,
            0x56, 0xcd, 0xfb, 0x60, 0x97, 0x0c, 0x3a, 0xa1,
            0x4f, 0xd4, 0xe2, 0x79, 0x8e, 0x15, 0x23, 0xb8,
            0xc8, 0x53, 0x65, 0xfe, 0x09, 0x92, 0xa4, 0x3f,
            0xd1, 0x4a, 0x7c, 0xe7, 0x10, 0x8b, 0xbd, 0x26,
            0xfa, 0x61, 0x57, 0xcc, 0x3b, 0xa0, 0x96, 0x0d,
            0xe3, 0x78, 0x4e, 0xd5, 0x22, 0xb9, 0x8f, 0x14,
            0xac, 0x37, 0x01, 0x9a, 0x6d, 0xf6, 0xc0, 0x5b,
            0xb5, 0x2e, 0x18, 0x83, 0x74, 0xef, 0xd9, 0x42,
            0x9e, 0x05, 0x33, 0xa8, 0x5f, 0xc4, 0xf2, 0x69,
            0x87, 0x1c, 0x2a, 0xb1, 0x46, 0xdd, 0xeb, 0x70,
            0x0b, 0x90, 0xa6, 0x3d, 0xca, 0x51, 0x67, 0xfc,
            0x12, 0x89, 0xbf, 0x24, 0xd3, 0x48, 0x7e, 0xe5,
            0x39, 0xa2, 0x94, 0x0f, 0xf8, 0x63, 0x55, 0xce,
            0x20, 0xbb, 0x8d, 0x16, 0xe1, 0x7a, 0x4c, 0xd7,
            0x6f, 0xf4, 0xc2, 0x59, 0xae, 0x35, 0x03, 0x98,
            0x76, 0xed, 0xdb, 0x40, 0xb7, 0x2c, 0x1a, 0x81,
            0x5d, 0xc6, 0xf0, 0x6b, 0x9c, 0x07, 0x31, 0xaa,
            0x44, 0xdf, 0xe9, 0x72, 0x85, 0x1e, 0x28, 0xb3,
            0xc3, 0x58, 0x6e, 0xf5, 0x02, 0x99, 0xaf, 0x34,
            0xda, 0x41, 0x77, 0xec, 0x1b, 0x80, 0xb6, 0x2d,
            0xf1, 0x6a, 0x5c, 0xc7, 0x30, 0xab, 0x9d, 0x06,
            0xe8, 0x73, 0x45, 0xde, 0x29, 0xb2, 0x84, 0x1f,
            0xa7, 0x3c, 0x0a, 0x91, 0x66, 0xfd, 0xcb, 0x50,
            0xbe, 0x25, 0x13, 0x88, 0x7f, 0xe4, 0xd2, 0x49,
            0x95, 0x0e, 0x38, 0xa3, 0x54, 0xcf, 0xf9, 0x62,
            0x8c, 0x17, 0x21, 0xba, 0x4d, 0xd6, 0xe0, 0x7b,
        ])
    }

    func testLookupTableDefault() throws {
        verifyLookupTable(for: .default, equalsTo: [
            0x00, 0x07, 0x0e, 0x09, 0x1c, 0x1b, 0x12, 0x15,
            0x38, 0x3f, 0x36, 0x31, 0x24, 0x23, 0x2a, 0x2d,
            0x70, 0x77, 0x7e, 0x79, 0x6c, 0x6b, 0x62, 0x65,
            0x48, 0x4f, 0x46, 0x41, 0x54, 0x53, 0x5a, 0x5d,
            0xe0, 0xe7, 0xee, 0xe9, 0xfc, 0xfb, 0xf2, 0xf5,
            0xd8, 0xdf, 0xd6, 0xd1, 0xc4, 0xc3, 0xca, 0xcd,
            0x90, 0x97, 0x9e, 0x99, 0x8c, 0x8b, 0x82, 0x85,
            0xa8, 0xaf, 0xa6, 0xa1, 0xb4, 0xb3, 0xba, 0xbd,
            0xc7, 0xc0, 0xc9, 0xce, 0xdb, 0xdc, 0xd5, 0xd2,
            0xff, 0xf8, 0xf1, 0xf6, 0xe3, 0xe4, 0xed, 0xea,
            0xb7, 0xb0, 0xb9, 0xbe, 0xab, 0xac, 0xa5, 0xa2,
            0x8f, 0x88, 0x81, 0x86, 0x93, 0x94, 0x9d, 0x9a,
            0x27, 0x20, 0x29, 0x2e, 0x3b, 0x3c, 0x35, 0x32,
            0x1f, 0x18, 0x11, 0x16, 0x03, 0x04, 0x0d, 0x0a,
            0x57, 0x50, 0x59, 0x5e, 0x4b, 0x4c, 0x45, 0x42,
            0x6f, 0x68, 0x61, 0x66, 0x73, 0x74, 0x7d, 0x7a,
            0x89, 0x8e, 0x87, 0x80, 0x95, 0x92, 0x9b, 0x9c,
            0xb1, 0xb6, 0xbf, 0xb8, 0xad, 0xaa, 0xa3, 0xa4,
            0xf9, 0xfe, 0xf7, 0xf0, 0xe5, 0xe2, 0xeb, 0xec,
            0xc1, 0xc6, 0xcf, 0xc8, 0xdd, 0xda, 0xd3, 0xd4,
            0x69, 0x6e, 0x67, 0x60, 0x75, 0x72, 0x7b, 0x7c,
            0x51, 0x56, 0x5f, 0x58, 0x4d, 0x4a, 0x43, 0x44,
            0x19, 0x1e, 0x17, 0x10, 0x05, 0x02, 0x0b, 0x0c,
            0x21, 0x26, 0x2f, 0x28, 0x3d, 0x3a, 0x33, 0x34,
            0x4e, 0x49, 0x40, 0x47, 0x52, 0x55, 0x5c, 0x5b,
            0x76, 0x71, 0x78, 0x7f, 0x6a, 0x6d, 0x64, 0x63,
            0x3e, 0x39, 0x30, 0x37, 0x22, 0x25, 0x2c, 0x2b,
            0x06, 0x01, 0x08, 0x0f, 0x1a, 0x1d, 0x14, 0x13,
            0xae, 0xa9, 0xa0, 0xa7, 0xb2, 0xb5, 0xbc, 0xbb,
            0x96, 0x91, 0x98, 0x9f, 0x8a, 0x8d, 0x84, 0x83,
            0xde, 0xd9, 0xd0, 0xd7, 0xc2, 0xc5, 0xcc, 0xcb,
            0xe6, 0xe1, 0xe8, 0xef, 0xfa, 0xfd, 0xf4, 0xf3,
        ])
    }

    func testLookupTableDARC() throws {
        verifyLookupTable(for: .darc, equalsTo: [
            0x00, 0x72, 0xe4, 0x96, 0xf1, 0x83, 0x15, 0x67,
            0xdb, 0xa9, 0x3f, 0x4d, 0x2a, 0x58, 0xce, 0xbc,
            0x8f, 0xfd, 0x6b, 0x19, 0x7e, 0x0c, 0x9a, 0xe8,
            0x54, 0x26, 0xb0, 0xc2, 0xa5, 0xd7, 0x41, 0x33,
            0x27, 0x55, 0xc3, 0xb1, 0xd6, 0xa4, 0x32, 0x40,
            0xfc, 0x8e, 0x18, 0x6a, 0x0d, 0x7f, 0xe9, 0x9b,
            0xa8, 0xda, 0x4c, 0x3e, 0x59, 0x2b, 0xbd, 0xcf,
            0x73, 0x01, 0x97, 0xe5, 0x82, 0xf0, 0x66, 0x14,
            0x4e, 0x3c, 0xaa, 0xd8, 0xbf, 0xcd, 0x5b, 0x29,
            0x95, 0xe7, 0x71, 0x03, 0x64, 0x16, 0x80, 0xf2,
            0xc1, 0xb3, 0x25, 0x57, 0x30, 0x42, 0xd4, 0xa6,
            0x1a, 0x68, 0xfe, 0x8c, 0xeb, 0x99, 0x0f, 0x7d,
            0x69, 0x1b, 0x8d, 0xff, 0x98, 0xea, 0x7c, 0x0e,
            0xb2, 0xc0, 0x56, 0x24, 0x43, 0x31, 0xa7, 0xd5,
            0xe6, 0x94, 0x02, 0x70, 0x17, 0x65, 0xf3, 0x81,
            0x3d, 0x4f, 0xd9, 0xab, 0xcc, 0xbe, 0x28, 0x5a,
            0x9c, 0xee, 0x78, 0x0a, 0x6d, 0x1f, 0x89, 0xfb,
            0x47, 0x35, 0xa3, 0xd1, 0xb6, 0xc4, 0x52, 0x20,
            0x13, 0x61, 0xf7, 0x85, 0xe2, 0x90, 0x06, 0x74,
            0xc8, 0xba, 0x2c, 0x5e, 0x39, 0x4b, 0xdd, 0xaf,
            0xbb, 0xc9, 0x5f, 0x2d, 0x4a, 0x38, 0xae, 0xdc,
            0x60, 0x12, 0x84, 0xf6, 0x91, 0xe3, 0x75, 0x07,
            0x34, 0x46, 0xd0, 0xa2, 0xc5, 0xb7, 0x21, 0x53,
            0xef, 0x9d, 0x0b, 0x79, 0x1e, 0x6c, 0xfa, 0x88,
            0xd2, 0xa0, 0x36, 0x44, 0x23, 0x51, 0xc7, 0xb5,
            0x09, 0x7b, 0xed, 0x9f, 0xf8, 0x8a, 0x1c, 0x6e,
            0x5d, 0x2f, 0xb9, 0xcb, 0xac, 0xde, 0x48, 0x3a,
            0x86, 0xf4, 0x62, 0x10, 0x77, 0x05, 0x93, 0xe1,
            0xf5, 0x87, 0x11, 0x63, 0x04, 0x76, 0xe0, 0x92,
            0x2e, 0x5c, 0xca, 0xb8, 0xdf, 0xad, 0x3b, 0x49,
            0x7a, 0x08, 0x9e, 0xec, 0x8b, 0xf9, 0x6f, 0x1d,
            0xa1, 0xd3, 0x45, 0x37, 0x50, 0x22, 0xb4, 0xc6,
        ])
    }

    func testLookupTableDVBS2() throws {
        verifyLookupTable(for: .dvbS2, equalsTo: [
            0x00, 0xd5, 0x7f, 0xaa, 0xfe, 0x2b, 0x81, 0x54,
            0x29, 0xfc, 0x56, 0x83, 0xd7, 0x02, 0xa8, 0x7d,
            0x52, 0x87, 0x2d, 0xf8, 0xac, 0x79, 0xd3, 0x06,
            0x7b, 0xae, 0x04, 0xd1, 0x85, 0x50, 0xfa, 0x2f,
            0xa4, 0x71, 0xdb, 0x0e, 0x5a, 0x8f, 0x25, 0xf0,
            0x8d, 0x58, 0xf2, 0x27, 0x73, 0xa6, 0x0c, 0xd9,
            0xf6, 0x23, 0x89, 0x5c, 0x08, 0xdd, 0x77, 0xa2,
            0xdf, 0x0a, 0xa0, 0x75, 0x21, 0xf4, 0x5e, 0x8b,
            0x9d, 0x48, 0xe2, 0x37, 0x63, 0xb6, 0x1c, 0xc9,
            0xb4, 0x61, 0xcb, 0x1e, 0x4a, 0x9f, 0x35, 0xe0,
            0xcf, 0x1a, 0xb0, 0x65, 0x31, 0xe4, 0x4e, 0x9b,
            0xe6, 0x33, 0x99, 0x4c, 0x18, 0xcd, 0x67, 0xb2,
            0x39, 0xec, 0x46, 0x93, 0xc7, 0x12, 0xb8, 0x6d,
            0x10, 0xc5, 0x6f, 0xba, 0xee, 0x3b, 0x91, 0x44,
            0x6b, 0xbe, 0x14, 0xc1, 0x95, 0x40, 0xea, 0x3f,
            0x42, 0x97, 0x3d, 0xe8, 0xbc, 0x69, 0xc3, 0x16,
            0xef, 0x3a, 0x90, 0x45, 0x11, 0xc4, 0x6e, 0xbb,
            0xc6, 0x13, 0xb9, 0x6c, 0x38, 0xed, 0x47, 0x92,
            0xbd, 0x68, 0xc2, 0x17, 0x43, 0x96, 0x3c, 0xe9,
            0x94, 0x41, 0xeb, 0x3e, 0x6a, 0xbf, 0x15, 0xc0,
            0x4b, 0x9e, 0x34, 0xe1, 0xb5, 0x60, 0xca, 0x1f,
            0x62, 0xb7, 0x1d, 0xc8, 0x9c, 0x49, 0xe3, 0x36,
            0x19, 0xcc, 0x66, 0xb3, 0xe7, 0x32, 0x98, 0x4d,
            0x30, 0xe5, 0x4f, 0x9a, 0xce, 0x1b, 0xb1, 0x64,
            0x72, 0xa7, 0x0d, 0xd8, 0x8c, 0x59, 0xf3, 0x26,
            0x5b, 0x8e, 0x24, 0xf1, 0xa5, 0x70, 0xda, 0x0f,
            0x20, 0xf5, 0x5f, 0x8a, 0xde, 0x0b, 0xa1, 0x74,
            0x09, 0xdc, 0x76, 0xa3, 0xf7, 0x22, 0x88, 0x5d,
            0xd6, 0x03, 0xa9, 0x7c, 0x28, 0xfd, 0x57, 0x82,
            0xff, 0x2a, 0x80, 0x55, 0x01, 0xd4, 0x7e, 0xab,
            0x84, 0x51, 0xfb, 0x2e, 0x7a, 0xaf, 0x05, 0xd0,
            0xad, 0x78, 0xd2, 0x07, 0x53, 0x86, 0x2c, 0xf9,
        ])
    }

    func testLookupTableEBU() throws {
        verifyLookupTable(for: .ebu, equalsTo: [
            0x00, 0x64, 0xc8, 0xac, 0xe1, 0x85, 0x29, 0x4d,
            0xb3, 0xd7, 0x7b, 0x1f, 0x52, 0x36, 0x9a, 0xfe,
            0x17, 0x73, 0xdf, 0xbb, 0xf6, 0x92, 0x3e, 0x5a,
            0xa4, 0xc0, 0x6c, 0x08, 0x45, 0x21, 0x8d, 0xe9,
            0x2e, 0x4a, 0xe6, 0x82, 0xcf, 0xab, 0x07, 0x63,
            0x9d, 0xf9, 0x55, 0x31, 0x7c, 0x18, 0xb4, 0xd0,
            0x39, 0x5d, 0xf1, 0x95, 0xd8, 0xbc, 0x10, 0x74,
            0x8a, 0xee, 0x42, 0x26, 0x6b, 0x0f, 0xa3, 0xc7,
            0x5c, 0x38, 0x94, 0xf0, 0xbd, 0xd9, 0x75, 0x11,
            0xef, 0x8b, 0x27, 0x43, 0x0e, 0x6a, 0xc6, 0xa2,
            0x4b, 0x2f, 0x83, 0xe7, 0xaa, 0xce, 0x62, 0x06,
            0xf8, 0x9c, 0x30, 0x54, 0x19, 0x7d, 0xd1, 0xb5,
            0x72, 0x16, 0xba, 0xde, 0x93, 0xf7, 0x5b, 0x3f,
            0xc1, 0xa5, 0x09, 0x6d, 0x20, 0x44, 0xe8, 0x8c,
            0x65, 0x01, 0xad, 0xc9, 0x84, 0xe0, 0x4c, 0x28,
            0xd6, 0xb2, 0x1e, 0x7a, 0x37, 0x53, 0xff, 0x9b,
            0xb8, 0xdc, 0x70, 0x14, 0x59, 0x3d, 0x91, 0xf5,
            0x0b, 0x6f, 0xc3, 0xa7, 0xea, 0x8e, 0x22, 0x46,
            0xaf, 0xcb, 0x67, 0x03, 0x4e, 0x2a, 0x86, 0xe2,
            0x1c, 0x78, 0xd4, 0xb0, 0xfd, 0x99, 0x35, 0x51,
            0x96, 0xf2, 0x5e, 0x3a, 0x77, 0x13, 0xbf, 0xdb,
            0x25, 0x41, 0xed, 0x89, 0xc4, 0xa0, 0x0c, 0x68,
            0x81, 0xe5, 0x49, 0x2d, 0x60, 0x04, 0xa8, 0xcc,
            0x32, 0x56, 0xfa, 0x9e, 0xd3, 0xb7, 0x1b, 0x7f,
            0xe4, 0x80, 0x2c, 0x48, 0x05, 0x61, 0xcd, 0xa9,
            0x57, 0x33, 0x9f, 0xfb, 0xb6, 0xd2, 0x7e, 0x1a,
            0xf3, 0x97, 0x3b, 0x5f, 0x12, 0x76, 0xda, 0xbe,
            0x40, 0x24, 0x88, 0xec, 0xa1, 0xc5, 0x69, 0x0d,
            0xca, 0xae, 0x02, 0x66, 0x2b, 0x4f, 0xe3, 0x87,
            0x79, 0x1d, 0xb1, 0xd5, 0x98, 0xfc, 0x50, 0x34,
            0xdd, 0xb9, 0x15, 0x71, 0x3c, 0x58, 0xf4, 0x90,
            0x6e, 0x0a, 0xa6, 0xc2, 0x8f, 0xeb, 0x47, 0x23,
        ])
    }

    func testLookupTableICODE() {
        verifyLookupTable(for: .iCode, equalsTo: [
            0x00, 0x1d, 0x3a, 0x27, 0x74, 0x69, 0x4e, 0x53,
            0xe8, 0xf5, 0xd2, 0xcf, 0x9c, 0x81, 0xa6, 0xbb,
            0xcd, 0xd0, 0xf7, 0xea, 0xb9, 0xa4, 0x83, 0x9e,
            0x25, 0x38, 0x1f, 0x02, 0x51, 0x4c, 0x6b, 0x76,
            0x87, 0x9a, 0xbd, 0xa0, 0xf3, 0xee, 0xc9, 0xd4,
            0x6f, 0x72, 0x55, 0x48, 0x1b, 0x06, 0x21, 0x3c,
            0x4a, 0x57, 0x70, 0x6d, 0x3e, 0x23, 0x04, 0x19,
            0xa2, 0xbf, 0x98, 0x85, 0xd6, 0xcb, 0xec, 0xf1,
            0x13, 0x0e, 0x29, 0x34, 0x67, 0x7a, 0x5d, 0x40,
            0xfb, 0xe6, 0xc1, 0xdc, 0x8f, 0x92, 0xb5, 0xa8,
            0xde, 0xc3, 0xe4, 0xf9, 0xaa, 0xb7, 0x90, 0x8d,
            0x36, 0x2b, 0x0c, 0x11, 0x42, 0x5f, 0x78, 0x65,
            0x94, 0x89, 0xae, 0xb3, 0xe0, 0xfd, 0xda, 0xc7,
            0x7c, 0x61, 0x46, 0x5b, 0x08, 0x15, 0x32, 0x2f,
            0x59, 0x44, 0x63, 0x7e, 0x2d, 0x30, 0x17, 0x0a,
            0xb1, 0xac, 0x8b, 0x96, 0xc5, 0xd8, 0xff, 0xe2,
            0x26, 0x3b, 0x1c, 0x01, 0x52, 0x4f, 0x68, 0x75,
            0xce, 0xd3, 0xf4, 0xe9, 0xba, 0xa7, 0x80, 0x9d,
            0xeb, 0xf6, 0xd1, 0xcc, 0x9f, 0x82, 0xa5, 0xb8,
            0x03, 0x1e, 0x39, 0x24, 0x77, 0x6a, 0x4d, 0x50,
            0xa1, 0xbc, 0x9b, 0x86, 0xd5, 0xc8, 0xef, 0xf2,
            0x49, 0x54, 0x73, 0x6e, 0x3d, 0x20, 0x07, 0x1a,
            0x6c, 0x71, 0x56, 0x4b, 0x18, 0x05, 0x22, 0x3f,
            0x84, 0x99, 0xbe, 0xa3, 0xf0, 0xed, 0xca, 0xd7,
            0x35, 0x28, 0x0f, 0x12, 0x41, 0x5c, 0x7b, 0x66,
            0xdd, 0xc0, 0xe7, 0xfa, 0xa9, 0xb4, 0x93, 0x8e,
            0xf8, 0xe5, 0xc2, 0xdf, 0x8c, 0x91, 0xb6, 0xab,
            0x10, 0x0d, 0x2a, 0x37, 0x64, 0x79, 0x5e, 0x43,
            0xb2, 0xaf, 0x88, 0x95, 0xc6, 0xdb, 0xfc, 0xe1,
            0x5a, 0x47, 0x60, 0x7d, 0x2e, 0x33, 0x14, 0x09,
            0x7f, 0x62, 0x45, 0x58, 0x0b, 0x16, 0x31, 0x2c,
            0x97, 0x8a, 0xad, 0xb0, 0xe3, 0xfe, 0xd9, 0xc4,
        ])
    }

    func testLookupTableITU() {
        verifyLookupTable(for: .itu, equalsTo: [
            0x00, 0x07, 0x0e, 0x09, 0x1c, 0x1b, 0x12, 0x15,
            0x38, 0x3f, 0x36, 0x31, 0x24, 0x23, 0x2a, 0x2d,
            0x70, 0x77, 0x7e, 0x79, 0x6c, 0x6b, 0x62, 0x65,
            0x48, 0x4f, 0x46, 0x41, 0x54, 0x53, 0x5a, 0x5d,
            0xe0, 0xe7, 0xee, 0xe9, 0xfc, 0xfb, 0xf2, 0xf5,
            0xd8, 0xdf, 0xd6, 0xd1, 0xc4, 0xc3, 0xca, 0xcd,
            0x90, 0x97, 0x9e, 0x99, 0x8c, 0x8b, 0x82, 0x85,
            0xa8, 0xaf, 0xa6, 0xa1, 0xb4, 0xb3, 0xba, 0xbd,
            0xc7, 0xc0, 0xc9, 0xce, 0xdb, 0xdc, 0xd5, 0xd2,
            0xff, 0xf8, 0xf1, 0xf6, 0xe3, 0xe4, 0xed, 0xea,
            0xb7, 0xb0, 0xb9, 0xbe, 0xab, 0xac, 0xa5, 0xa2,
            0x8f, 0x88, 0x81, 0x86, 0x93, 0x94, 0x9d, 0x9a,
            0x27, 0x20, 0x29, 0x2e, 0x3b, 0x3c, 0x35, 0x32,
            0x1f, 0x18, 0x11, 0x16, 0x03, 0x04, 0x0d, 0x0a,
            0x57, 0x50, 0x59, 0x5e, 0x4b, 0x4c, 0x45, 0x42,
            0x6f, 0x68, 0x61, 0x66, 0x73, 0x74, 0x7d, 0x7a,
            0x89, 0x8e, 0x87, 0x80, 0x95, 0x92, 0x9b, 0x9c,
            0xb1, 0xb6, 0xbf, 0xb8, 0xad, 0xaa, 0xa3, 0xa4,
            0xf9, 0xfe, 0xf7, 0xf0, 0xe5, 0xe2, 0xeb, 0xec,
            0xc1, 0xc6, 0xcf, 0xc8, 0xdd, 0xda, 0xd3, 0xd4,
            0x69, 0x6e, 0x67, 0x60, 0x75, 0x72, 0x7b, 0x7c,
            0x51, 0x56, 0x5f, 0x58, 0x4d, 0x4a, 0x43, 0x44,
            0x19, 0x1e, 0x17, 0x10, 0x05, 0x02, 0x0b, 0x0c,
            0x21, 0x26, 0x2f, 0x28, 0x3d, 0x3a, 0x33, 0x34,
            0x4e, 0x49, 0x40, 0x47, 0x52, 0x55, 0x5c, 0x5b,
            0x76, 0x71, 0x78, 0x7f, 0x6a, 0x6d, 0x64, 0x63,
            0x3e, 0x39, 0x30, 0x37, 0x22, 0x25, 0x2c, 0x2b,
            0x06, 0x01, 0x08, 0x0f, 0x1a, 0x1d, 0x14, 0x13,
            0xae, 0xa9, 0xa0, 0xa7, 0xb2, 0xb5, 0xbc, 0xbb,
            0x96, 0x91, 0x98, 0x9f, 0x8a, 0x8d, 0x84, 0x83,
            0xde, 0xd9, 0xd0, 0xd7, 0xc2, 0xc5, 0xcc, 0xcb,
            0xe6, 0xe1, 0xe8, 0xef, 0xfa, 0xfd, 0xf4, 0xf3,
        ])
    }

    func testLookupTableMaxim() {
        verifyLookupTable(for: .maxim, equalsTo: [
            0x00, 0x5e, 0xbc, 0xe2, 0x61, 0x3f, 0xdd, 0x83,
            0xc2, 0x9c, 0x7e, 0x20, 0xa3, 0xfd, 0x1f, 0x41,
            0x9d, 0xc3, 0x21, 0x7f, 0xfc, 0xa2, 0x40, 0x1e,
            0x5f, 0x01, 0xe3, 0xbd, 0x3e, 0x60, 0x82, 0xdc,
            0x23, 0x7d, 0x9f, 0xc1, 0x42, 0x1c, 0xfe, 0xa0,
            0xe1, 0xbf, 0x5d, 0x03, 0x80, 0xde, 0x3c, 0x62,
            0xbe, 0xe0, 0x02, 0x5c, 0xdf, 0x81, 0x63, 0x3d,
            0x7c, 0x22, 0xc0, 0x9e, 0x1d, 0x43, 0xa1, 0xff,
            0x46, 0x18, 0xfa, 0xa4, 0x27, 0x79, 0x9b, 0xc5,
            0x84, 0xda, 0x38, 0x66, 0xe5, 0xbb, 0x59, 0x07,
            0xdb, 0x85, 0x67, 0x39, 0xba, 0xe4, 0x06, 0x58,
            0x19, 0x47, 0xa5, 0xfb, 0x78, 0x26, 0xc4, 0x9a,
            0x65, 0x3b, 0xd9, 0x87, 0x04, 0x5a, 0xb8, 0xe6,
            0xa7, 0xf9, 0x1b, 0x45, 0xc6, 0x98, 0x7a, 0x24,
            0xf8, 0xa6, 0x44, 0x1a, 0x99, 0xc7, 0x25, 0x7b,
            0x3a, 0x64, 0x86, 0xd8, 0x5b, 0x05, 0xe7, 0xb9,
            0x8c, 0xd2, 0x30, 0x6e, 0xed, 0xb3, 0x51, 0x0f,
            0x4e, 0x10, 0xf2, 0xac, 0x2f, 0x71, 0x93, 0xcd,
            0x11, 0x4f, 0xad, 0xf3, 0x70, 0x2e, 0xcc, 0x92,
            0xd3, 0x8d, 0x6f, 0x31, 0xb2, 0xec, 0x0e, 0x50,
            0xaf, 0xf1, 0x13, 0x4d, 0xce, 0x90, 0x72, 0x2c,
            0x6d, 0x33, 0xd1, 0x8f, 0x0c, 0x52, 0xb0, 0xee,
            0x32, 0x6c, 0x8e, 0xd0, 0x53, 0x0d, 0xef, 0xb1,
            0xf0, 0xae, 0x4c, 0x12, 0x91, 0xcf, 0x2d, 0x73,
            0xca, 0x94, 0x76, 0x28, 0xab, 0xf5, 0x17, 0x49,
            0x08, 0x56, 0xb4, 0xea, 0x69, 0x37, 0xd5, 0x8b,
            0x57, 0x09, 0xeb, 0xb5, 0x36, 0x68, 0x8a, 0xd4,
            0x95, 0xcb, 0x29, 0x77, 0xf4, 0xaa, 0x48, 0x16,
            0xe9, 0xb7, 0x55, 0x0b, 0x88, 0xd6, 0x34, 0x6a,
            0x2b, 0x75, 0x97, 0xc9, 0x4a, 0x14, 0xf6, 0xa8,
            0x74, 0x2a, 0xc8, 0x96, 0x15, 0x4b, 0xa9, 0xf7,
            0xb6, 0xe8, 0x0a, 0x54, 0xd7, 0x89, 0x6b, 0x35,
        ])
    }

    func testLookupTableROHC() {
        verifyLookupTable(for: .rohc, equalsTo: [
            0x00, 0x91, 0xe3, 0x72, 0x07, 0x96, 0xe4, 0x75,
            0x0e, 0x9f, 0xed, 0x7c, 0x09, 0x98, 0xea, 0x7b,
            0x1c, 0x8d, 0xff, 0x6e, 0x1b, 0x8a, 0xf8, 0x69,
            0x12, 0x83, 0xf1, 0x60, 0x15, 0x84, 0xf6, 0x67,
            0x38, 0xa9, 0xdb, 0x4a, 0x3f, 0xae, 0xdc, 0x4d,
            0x36, 0xa7, 0xd5, 0x44, 0x31, 0xa0, 0xd2, 0x43,
            0x24, 0xb5, 0xc7, 0x56, 0x23, 0xb2, 0xc0, 0x51,
            0x2a, 0xbb, 0xc9, 0x58, 0x2d, 0xbc, 0xce, 0x5f,
            0x70, 0xe1, 0x93, 0x02, 0x77, 0xe6, 0x94, 0x05,
            0x7e, 0xef, 0x9d, 0x0c, 0x79, 0xe8, 0x9a, 0x0b,
            0x6c, 0xfd, 0x8f, 0x1e, 0x6b, 0xfa, 0x88, 0x19,
            0x62, 0xf3, 0x81, 0x10, 0x65, 0xf4, 0x86, 0x17,
            0x48, 0xd9, 0xab, 0x3a, 0x4f, 0xde, 0xac, 0x3d,
            0x46, 0xd7, 0xa5, 0x34, 0x41, 0xd0, 0xa2, 0x33,
            0x54, 0xc5, 0xb7, 0x26, 0x53, 0xc2, 0xb0, 0x21,
            0x5a, 0xcb, 0xb9, 0x28, 0x5d, 0xcc, 0xbe, 0x2f,
            0xe0, 0x71, 0x03, 0x92, 0xe7, 0x76, 0x04, 0x95,
            0xee, 0x7f, 0x0d, 0x9c, 0xe9, 0x78, 0x0a, 0x9b,
            0xfc, 0x6d, 0x1f, 0x8e, 0xfb, 0x6a, 0x18, 0x89,
            0xf2, 0x63, 0x11, 0x80, 0xf5, 0x64, 0x16, 0x87,
            0xd8, 0x49, 0x3b, 0xaa, 0xdf, 0x4e, 0x3c, 0xad,
            0xd6, 0x47, 0x35, 0xa4, 0xd1, 0x40, 0x32, 0xa3,
            0xc4, 0x55, 0x27, 0xb6, 0xc3, 0x52, 0x20, 0xb1,
            0xca, 0x5b, 0x29, 0xb8, 0xcd, 0x5c, 0x2e, 0xbf,
            0x90, 0x01, 0x73, 0xe2, 0x97, 0x06, 0x74, 0xe5,
            0x9e, 0x0f, 0x7d, 0xec, 0x99, 0x08, 0x7a, 0xeb,
            0x8c, 0x1d, 0x6f, 0xfe, 0x8b, 0x1a, 0x68, 0xf9,
            0x82, 0x13, 0x61, 0xf0, 0x85, 0x14, 0x66, 0xf7,
            0xa8, 0x39, 0x4b, 0xda, 0xaf, 0x3e, 0x4c, 0xdd,
            0xa6, 0x37, 0x45, 0xd4, 0xa1, 0x30, 0x42, 0xd3,
            0xb4, 0x25, 0x57, 0xc6, 0xb3, 0x22, 0x50, 0xc1,
            0xba, 0x2b, 0x59, 0xc8, 0xbd, 0x2c, 0x5e, 0xcf,
        ])
    }

    func testLookupTableWCDMA() {
        verifyLookupTable(for: .wcdma, equalsTo: [
            0x00, 0xd0, 0x13, 0xc3, 0x26, 0xf6, 0x35, 0xe5,
            0x4c, 0x9c, 0x5f, 0x8f, 0x6a, 0xba, 0x79, 0xa9,
            0x98, 0x48, 0x8b, 0x5b, 0xbe, 0x6e, 0xad, 0x7d,
            0xd4, 0x04, 0xc7, 0x17, 0xf2, 0x22, 0xe1, 0x31,
            0x83, 0x53, 0x90, 0x40, 0xa5, 0x75, 0xb6, 0x66,
            0xcf, 0x1f, 0xdc, 0x0c, 0xe9, 0x39, 0xfa, 0x2a,
            0x1b, 0xcb, 0x08, 0xd8, 0x3d, 0xed, 0x2e, 0xfe,
            0x57, 0x87, 0x44, 0x94, 0x71, 0xa1, 0x62, 0xb2,
            0xb5, 0x65, 0xa6, 0x76, 0x93, 0x43, 0x80, 0x50,
            0xf9, 0x29, 0xea, 0x3a, 0xdf, 0x0f, 0xcc, 0x1c,
            0x2d, 0xfd, 0x3e, 0xee, 0x0b, 0xdb, 0x18, 0xc8,
            0x61, 0xb1, 0x72, 0xa2, 0x47, 0x97, 0x54, 0x84,
            0x36, 0xe6, 0x25, 0xf5, 0x10, 0xc0, 0x03, 0xd3,
            0x7a, 0xaa, 0x69, 0xb9, 0x5c, 0x8c, 0x4f, 0x9f,
            0xae, 0x7e, 0xbd, 0x6d, 0x88, 0x58, 0x9b, 0x4b,
            0xe2, 0x32, 0xf1, 0x21, 0xc4, 0x14, 0xd7, 0x07,
            0xd9, 0x09, 0xca, 0x1a, 0xff, 0x2f, 0xec, 0x3c,
            0x95, 0x45, 0x86, 0x56, 0xb3, 0x63, 0xa0, 0x70,
            0x41, 0x91, 0x52, 0x82, 0x67, 0xb7, 0x74, 0xa4,
            0x0d, 0xdd, 0x1e, 0xce, 0x2b, 0xfb, 0x38, 0xe8,
            0x5a, 0x8a, 0x49, 0x99, 0x7c, 0xac, 0x6f, 0xbf,
            0x16, 0xc6, 0x05, 0xd5, 0x30, 0xe0, 0x23, 0xf3,
            0xc2, 0x12, 0xd1, 0x01, 0xe4, 0x34, 0xf7, 0x27,
            0x8e, 0x5e, 0x9d, 0x4d, 0xa8, 0x78, 0xbb, 0x6b,
            0x6c, 0xbc, 0x7f, 0xaf, 0x4a, 0x9a, 0x59, 0x89,
            0x20, 0xf0, 0x33, 0xe3, 0x06, 0xd6, 0x15, 0xc5,
            0xf4, 0x24, 0xe7, 0x37, 0xd2, 0x02, 0xc1, 0x11,
            0xb8, 0x68, 0xab, 0x7b, 0x9e, 0x4e, 0x8d, 0x5d,
            0xef, 0x3f, 0xfc, 0x2c, 0xc9, 0x19, 0xda, 0x0a,
            0xa3, 0x73, 0xb0, 0x60, 0x85, 0x55, 0x96, 0x46,
            0x77, 0xa7, 0x64, 0xb4, 0x51, 0x81, 0x42, 0x92,
            0x3b, 0xeb, 0x28, 0xf8, 0x1d, 0xcd, 0x0e, 0xde,
        ])
    }

}
